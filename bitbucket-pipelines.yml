# image: mcr.microsoft.com/dotnet/core/sdk:3.1
image: mcr.microsoft.com/dotnet/sdk:6.0

pipelines:
  default:
    - parallel:
        - step:
            name: Build and Test the code
            caches:
              - dotnetcore
            script:
              - REPORTS_PATH=./test-reports/build_${BITBUCKET_BUILD_NUMBER}
              # - dotnet workload install maui-android
              # - dotnet workload install macos
              # - dotnet workload install ios
              # - dotnet workload install maui-tizen

              # - dotnet restore ./Websockets/Websockets.csproj
              # - dotnet restore ./Host/Host.csproj
              - dotnet workload restore
              - dotnet build --no-restore --configuration Release --os linux-x64
              - dotnet test --no-build --configuration Release --test-adapter-path:. --logger:"junit;LogFilePath=$REPORTS_PATH/junit.xml"
        - step:
            name: Lint the code
            caches:
              - dotnetcore
            script:
              - export SOLUTION_NAME=IpcaGym
              - export REPORTS_PATH=linter-reports
              - dotnet new tool-manifest
              - dotnet tool install JetBrains.ReSharper.GlobalTools
              - dotnet tool restore
              - dotnet jb inspectcode ${SOLUTION_NAME}.sln --output="${REPORTS_PATH}/jb-${BITBUCKET_BUILD_NUMBER}.xml"
            artifacts:
              - linter-reports/**

        # - step:
        #     name: Build and Test client
        #     caches:
        #       - dotnetcore
        #     script:
        #       - cd Client
        #       - REPORTS_PATH=./test-reports/build_${BITBUCKET_BUILD_NUMBER}
        #       - sudo dotnet workload install maui-android sudo dotnet workload install macos sudo dotnet workload install maui-tizen sudo dotnet workload install macos sudo dotnet workload install maui-tizen
        #       - dotnet restore
        #       - dotnet build --no-restore --configuration Release
        #       - dotnet test --no-build --configuration Release --test-adapter-path:. --logger:"junit;LogFilePath=$REPORTS_PATH/junit.xml"
        # - step:
        #     name: Lint the code client
        #     caches:
        #       - dotnetcore
        #     script:
        #       - cd Client
        #       - export SOLUTION_NAME=../IpcaGym
        #       - export REPORTS_PATH=linter-reports
        #       - dotnet Client/ new tool-manifest
        #       - dotnet tool install JetBrains.ReSharper.GlobalTools
        #       - dotnet tool restore
        #       - dotnet jb inspectcode ${SOLUTION_NAME}.sln --output="${REPORTS_PATH}/jb-${BITBUCKET_BUILD_NUMBER}.xml"
        #     artifacts:
        #       - linter-reports/**

        # - step:
        #     name: Build and Test Websockets
        #     caches:
        #       - dotnetcore
        #     script:
        #       - cd Websockets
        #       - REPORTS_PATH=./test-reports/build_${BITBUCKET_BUILD_NUMBER}
        #       - dotnet restore
        #       - dotnet build --no-restore --configuration Release
        #       - dotnet test --no-build --configuration Release --test-adapter-path:. --logger:"junit;LogFilePath=$REPORTS_PATH/junit.xml"
        # - step:
        #     name: Lint the code client
        #     caches:
        #       - dotnetcore
        #     script:
        #       - cd Websockets
        #       - export SOLUTION_NAME=../IpcaGym
        #       - export REPORTS_PATH=linter-reports
        #       - dotnet new tool-manifest
        #       - dotnet tool install JetBrains.ReSharper.GlobalTools
        #       - dotnet tool restore
        #       - dotnet jb inspectcode ${SOLUTION_NAME}.sln --output="${REPORTS_PATH}/jb-${BITBUCKET_BUILD_NUMBER}.xml"
        #     artifacts:
        #       - linter-reports/**